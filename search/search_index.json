{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Microsoft365DSC - Your Cloud Configuration? \u00b6 Microsoft365DSC is the most comprehensive and complete solution to have your Microsoft 365 tenant configuration simple and stable. It's an Open-Source initiative hosted on GitHub , lead by Microsoft engineers and maintained by the community. Why Microsoft365DSC? \u00b6 Microsoft365DSC allows you to write your Cloud configuration as Code, automate the deployment of that configuration, and ensures the monitoring of that configuration, notifying and acting on detected drifts. It also allows you to extract a configuration out of any existing Microsoft 365 tenant and import into another. The tool covers all major Microsoft 365 workloads such as Exchange Online, Teams, Power Platform, SharePoint, Security and Compliance. Export your configuration \u00b6 Microsoft365DSC allows you to replicate configurations over Microsoft 365 Tenants, or to keep multiple Tenants in sync configuration wise. Report on your configuration \u00b6 Microsoft365DSC provides you with options to convert the extracted configurations into both an HTML report or an Excel report, making it easy for you to review your configuration. Analyse your configuration \u00b6 Microsoft365DSC has a continious monitoring feature that will allow to automatically detect a drift and act on it if needed. Compare your configuration against Best Practices \u00b6 Microsoft365DSC can compare the configuration of your current tenant against a set of best practices (called a Blueprint) that are recommended by Microsoft and the Community. It will recommend why you need to change a setting and how to configure them in a certain way.","title":"Home"},{"location":"#what-is-microsoft365dsc-your-cloud-configuration","text":"Microsoft365DSC is the most comprehensive and complete solution to have your Microsoft 365 tenant configuration simple and stable. It's an Open-Source initiative hosted on GitHub , lead by Microsoft engineers and maintained by the community.","title":"What is Microsoft365DSC - Your Cloud Configuration?"},{"location":"#why-microsoft365dsc","text":"Microsoft365DSC allows you to write your Cloud configuration as Code, automate the deployment of that configuration, and ensures the monitoring of that configuration, notifying and acting on detected drifts. It also allows you to extract a configuration out of any existing Microsoft 365 tenant and import into another. The tool covers all major Microsoft 365 workloads such as Exchange Online, Teams, Power Platform, SharePoint, Security and Compliance.","title":"Why Microsoft365DSC?"},{"location":"#export-your-configuration","text":"Microsoft365DSC allows you to replicate configurations over Microsoft 365 Tenants, or to keep multiple Tenants in sync configuration wise.","title":"Export your configuration"},{"location":"#report-on-your-configuration","text":"Microsoft365DSC provides you with options to convert the extracted configurations into both an HTML report or an Excel report, making it easy for you to review your configuration.","title":"Report on your configuration"},{"location":"#analyse-your-configuration","text":"Microsoft365DSC has a continious monitoring feature that will allow to automatically detect a drift and act on it if needed.","title":"Analyse your configuration"},{"location":"#compare-your-configuration-against-best-practices","text":"Microsoft365DSC can compare the configuration of your current tenant against a set of best practices (called a Blueprint) that are recommended by Microsoft and the Community. It will recommend why you need to change a setting and how to configure them in a certain way.","title":"Compare your configuration against Best Practices"},{"location":"about/license/","text":"MIT License Copyright (c) Microsoft Corporation. All rights reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE","title":"License"},{"location":"about/why/","text":"What is Microsoft365DSC - Your Cloud Configuration? \u00b6 Microsoft365DSC is an Open-Source initiative hosted on GitHub , lead by Microsoft engineers and maintained by the community. It allows you to write a definition for how your Microsoft 365 tenant should be configured, automate the deployment of that configuration, and ensures the monitoring of the defined configuration, notifying and acting on detected configuration drifts. It also allows you to extract a full-fidelity configuration out of any existing Microsoft 365 tenant. The tool covers all major Microsoft 365 workloads such as Exchange Online, Teams, Power Platforms, SharePoint and Security and Compliance.","title":"Why Microsoft365DSC"},{"location":"about/why/#what-is-microsoft365dsc-your-cloud-configuration","text":"Microsoft365DSC is an Open-Source initiative hosted on GitHub , lead by Microsoft engineers and maintained by the community. It allows you to write a definition for how your Microsoft 365 tenant should be configured, automate the deployment of that configuration, and ensures the monitoring of the defined configuration, notifying and acting on detected configuration drifts. It also allows you to extract a full-fidelity configuration out of any existing Microsoft 365 tenant. The tool covers all major Microsoft 365 workloads such as Exchange Online, Teams, Power Platforms, SharePoint and Security and Compliance.","title":"What is Microsoft365DSC - Your Cloud Configuration?"},{"location":"concepts/breaking-changes/","text":"Breaking Changes Policy \u00b6 Microsoft 365 is under constant development, which means that functionalities are being added, deprecated or removed all the time. Microsoft365DSC has to adapt to these changes and at the same time make sure existing users and configurations are impacted as little as possible. That is why starting in 2021, we are adopting a formal process to handle breaking changes. The goal of this process is to provide a clear schedule, so that users of Microsoft365DSC are aware of any impact, any required actions and prepare themselves well in advance. What are Breaking Changes? \u00b6 In the cases where a new resource is added, a resource gets a new optional parameter or a parameter that used to be mandatory becomes optional, existing configurations are not impacted. But when a resource or parameter is removed or an optional parameter becomes mandatory, existing configurations can stop functioning, because they are using these removed components. That is what is called a \u201cBreaking Change\u201d: A change that can break existing configurations and therefore impact the administration process of Microsoft 365. Release process \u00b6 Microsoft365DSC relies on multiple other modules for connecting to Microsoft 365, which all can release updates at any time. If a change in any of these modules is released which results in a breaking change in Microsoft365DSC, we will update the module to write a verbose message notifying the administrator that the component (resource, parameter, etc) has become deprecated, is no longer being used and will be removed in a future version. A warning event will also be added to the event logs, allowing users to monitor deprecated events. Twice a year we will release a version that bundles all breaking changes of the previous six months into a single version: The first release of the month in April and October. The release notes of these versions will have all breaking changes clearly documented, including the required actions to take. While it is still our recommendation to always use the latest version of the module for your operations, Breaking Changes Releases (BCR) will almost certainly mean that you will have to update your existing configurations or generate a new export. We understand that this may introduce challenges to our users which is why every BCR will be properly communicated and detailed information about how to address these breaking changes will be published in advanced on the official GitHub repository. NOTE: Since releases are cumulative, all releases after that version will also have those changes included and will require the same updates to existing configurations.","title":"Breaking Changes Policy"},{"location":"concepts/breaking-changes/#breaking-changes-policy","text":"Microsoft 365 is under constant development, which means that functionalities are being added, deprecated or removed all the time. Microsoft365DSC has to adapt to these changes and at the same time make sure existing users and configurations are impacted as little as possible. That is why starting in 2021, we are adopting a formal process to handle breaking changes. The goal of this process is to provide a clear schedule, so that users of Microsoft365DSC are aware of any impact, any required actions and prepare themselves well in advance.","title":"Breaking Changes Policy"},{"location":"concepts/breaking-changes/#what-are-breaking-changes","text":"In the cases where a new resource is added, a resource gets a new optional parameter or a parameter that used to be mandatory becomes optional, existing configurations are not impacted. But when a resource or parameter is removed or an optional parameter becomes mandatory, existing configurations can stop functioning, because they are using these removed components. That is what is called a \u201cBreaking Change\u201d: A change that can break existing configurations and therefore impact the administration process of Microsoft 365.","title":"What are Breaking Changes?"},{"location":"concepts/breaking-changes/#release-process","text":"Microsoft365DSC relies on multiple other modules for connecting to Microsoft 365, which all can release updates at any time. If a change in any of these modules is released which results in a breaking change in Microsoft365DSC, we will update the module to write a verbose message notifying the administrator that the component (resource, parameter, etc) has become deprecated, is no longer being used and will be removed in a future version. A warning event will also be added to the event logs, allowing users to monitor deprecated events. Twice a year we will release a version that bundles all breaking changes of the previous six months into a single version: The first release of the month in April and October. The release notes of these versions will have all breaking changes clearly documented, including the required actions to take. While it is still our recommendation to always use the latest version of the module for your operations, Breaking Changes Releases (BCR) will almost certainly mean that you will have to update your existing configurations or generate a new export. We understand that this may introduce challenges to our users which is why every BCR will be properly communicated and detailed information about how to address these breaking changes will be published in advanced on the official GitHub repository. NOTE: Since releases are cumulative, all releases after that version will also have those changes included and will require the same updates to existing configurations.","title":"Release process"},{"location":"concepts/odsp-permissions/","text":"Microsoft365DSC Permissions for SharePoint and OneDrive \u00b6","title":"OneDrive & SharePoint Permissions"},{"location":"concepts/odsp-permissions/#microsoft365dsc-permissions-for-sharepoint-and-onedrive","text":"","title":"Microsoft365DSC Permissions for SharePoint and OneDrive"},{"location":"contributing/contribution-guidelines/","text":"Contribution guidelines \u00b6 Microsoft365DSC is an Open-Source initiative lead by Microsoft engineers and maintained by the community and open for new ideas as well as for volunteers helping us make it even better and better. Therefore, if you are interested in contributing to this project, we'd like you to read through the contribution guidelines so you know how to contribute to this project. You have a new idea for Microsoft365DSC \u00b6 Great, we always love to add more features and capabilities to Microsoft365DSC But in case that there is already the same or a similar idea listed in our issue list we would like you to check that list before you submit a new issue. If your ideas is not in that list, then please add a new issue in the issue list of type Feature request and fill out the form with your idea (please describe it as precise as possible so we have a clear understanding what you want to achieve with it). NOTE: If you want to add the idea or feature to the project yourself, please just state that in the issue form. You have found a bug in Microsoft365DSC \u00b6 We try our best to avoid any bugs, but sometimes they do happen though. So if you encounter a bug while using Microsoft365DSC please check if that bug is already part of our issue list and if not we would like to know what problems you encountered. So feel free to add a new issue of type Bug report in the issue list along with information about the bug itself and how to reproduce it. If there is anything unclear to us or we cannot reproduce the bug, we will ask you for clarification to get things sorted out. Fixing typos \u00b6 Typos are embarrassing! Most PR's that fix typos will be accepted immediately. In order to make it easier to review the PR, please narrow the focus instead of sending a huge PR of fixes. DO's & DON'Ts \u00b6 DO follow the same project and test structure as the existing project. DO include tests when adding new functionality and features. When fixing bugs, start with adding a test that highlights how the current behavior is broken. DO keep discussions focused. When a new or related topic comes up it's often better to create new issue than to side track the conversation. DO NOT submit PR's for coding style changes. DO NOT surprise us with big PR's. Instead file an issue & start a discussion so we can agree on a direction before you invest a large amount of time. DO NOT commit code you didn't write. DO NOT submit PR's that refactor existing code without a discussion first.","title":"Guidelines"},{"location":"contributing/contribution-guidelines/#contribution-guidelines","text":"Microsoft365DSC is an Open-Source initiative lead by Microsoft engineers and maintained by the community and open for new ideas as well as for volunteers helping us make it even better and better. Therefore, if you are interested in contributing to this project, we'd like you to read through the contribution guidelines so you know how to contribute to this project.","title":"Contribution guidelines"},{"location":"contributing/contribution-guidelines/#you-have-a-new-idea-for-microsoft365dsc","text":"Great, we always love to add more features and capabilities to Microsoft365DSC But in case that there is already the same or a similar idea listed in our issue list we would like you to check that list before you submit a new issue. If your ideas is not in that list, then please add a new issue in the issue list of type Feature request and fill out the form with your idea (please describe it as precise as possible so we have a clear understanding what you want to achieve with it). NOTE: If you want to add the idea or feature to the project yourself, please just state that in the issue form.","title":"You have a new idea for Microsoft365DSC"},{"location":"contributing/contribution-guidelines/#you-have-found-a-bug-in-microsoft365dsc","text":"We try our best to avoid any bugs, but sometimes they do happen though. So if you encounter a bug while using Microsoft365DSC please check if that bug is already part of our issue list and if not we would like to know what problems you encountered. So feel free to add a new issue of type Bug report in the issue list along with information about the bug itself and how to reproduce it. If there is anything unclear to us or we cannot reproduce the bug, we will ask you for clarification to get things sorted out.","title":"You have found a bug in Microsoft365DSC"},{"location":"contributing/contribution-guidelines/#fixing-typos","text":"Typos are embarrassing! Most PR's that fix typos will be accepted immediately. In order to make it easier to review the PR, please narrow the focus instead of sending a huge PR of fixes.","title":"Fixing typos"},{"location":"contributing/contribution-guidelines/#dos-donts","text":"DO follow the same project and test structure as the existing project. DO include tests when adding new functionality and features. When fixing bugs, start with adding a test that highlights how the current behavior is broken. DO keep discussions focused. When a new or related topic comes up it's often better to create new issue than to side track the conversation. DO NOT submit PR's for coding style changes. DO NOT surprise us with big PR's. Instead file an issue & start a discussion so we can agree on a direction before you invest a large amount of time. DO NOT commit code you didn't write. DO NOT submit PR's that refactor existing code without a discussion first.","title":"DO's &amp; DON'Ts"},{"location":"contributing/develop-new-resource/","text":"Develop a New Resource \u00b6","title":"Develop a New Resource"},{"location":"contributing/develop-new-resource/#develop-a-new-resource","text":"","title":"Develop a New Resource"},{"location":"contributing/getting-started/","text":"Setting up your Environment to Contribute to the Project \u00b6","title":"Getting started"},{"location":"contributing/getting-started/#setting-up-your-environment-to-contribute-to-the-project","text":"","title":"Setting up your Environment to Contribute to the Project"},{"location":"releases/releases/","text":"Releases \u00b6","title":"Releases"},{"location":"releases/releases/#releases","text":"","title":"Releases"},{"location":"tutorials/create-blueprint/","text":"create \u00b6","title":"How to Create a M365DSC Blueprint"},{"location":"tutorials/create-blueprint/#create","text":"","title":"create"},{"location":"tutorials/resources/","text":"Resources \u00b6 This section contains various resources produced by both Microsoft and member of the Microsoft365DSC Community. Blog Articles \u00b6 Using Microsoft365DSC in an Azure Automation Runbook Web page icon Podcasts/Webcasts \u00b6 Microsoft 365 Developer Podcast: Microsoft365DSC News with Nik Charlebois Microsoft 365 Developer Podcast: Configuration as Code and DevOPS for Office 365 with Nik Charlebois O365EH!: Discussions on Microsoft 365 Desired State Configuration with Nik Charlebois RunAsRadio: Microsoft 365 Desired State Configuration with Nik Charlebois Whitepapers \u00b6 Managing Microsoft 365 with Microsoft365DSC and Azure DevOps","title":"Resources"},{"location":"tutorials/resources/#resources","text":"This section contains various resources produced by both Microsoft and member of the Microsoft365DSC Community.","title":"Resources"},{"location":"tutorials/resources/#blog-articles","text":"Using Microsoft365DSC in an Azure Automation Runbook Web page icon","title":"Blog Articles"},{"location":"tutorials/resources/#podcastswebcasts","text":"Microsoft 365 Developer Podcast: Microsoft365DSC News with Nik Charlebois Microsoft 365 Developer Podcast: Configuration as Code and DevOPS for Office 365 with Nik Charlebois O365EH!: Discussions on Microsoft 365 Desired State Configuration with Nik Charlebois RunAsRadio: Microsoft 365 Desired State Configuration with Nik Charlebois","title":"Podcasts/Webcasts"},{"location":"tutorials/resources/#whitepapers","text":"Managing Microsoft 365 with Microsoft365DSC and Azure DevOps","title":"Whitepapers"},{"location":"user-guide/apply-config/","text":"Apply a Configuration to your Microsoft 365 Tenant \u00b6","title":"Apply a Configuration to your Microsoft 365 Tenant"},{"location":"user-guide/apply-config/#apply-a-configuration-to-your-microsoft-365-tenant","text":"","title":"Apply a Configuration to your Microsoft 365 Tenant"},{"location":"user-guide/assess-tenants-blueprint/","text":"Assess Tenants Against a Blueprint \u00b6","title":"Assess Tenants Against a Blueprint"},{"location":"user-guide/assess-tenants-blueprint/#assess-tenants-against-a-blueprint","text":"","title":"Assess Tenants Against a Blueprint"},{"location":"user-guide/extract-config/","text":"Extracting Configuration from an Existing Microsoft 365 Tenant \u00b6 The moment you install the Microsoft365DSC module onto a machine, a new PowerShell cmdlet, Export-M365DSCConfiguration is made available. The Export-M365DSCConfiguration cmdlet exposes several parameters to help you customize the extraction experience. The following table lists all the parameters available: Parameter Name Type Description Description -LaunchWebUI Switch Launches a new web browser and navigates to the Web based Graphical User Interface. Export-M365DSCConfiguration -LaunchWebUI -Credential PSCredential Specifies the credentials to use to perform the configuration's extraction. If you omit this parameter, the user will be prompted to provide credentials before executing the extraction. $creds = Get-Credential Export-M365DSCConfiguration -Credential $creds -Components String Array The -ComponentsToExtract parameter allows you to specify a granular list of components you wish to extract. The components need to be listed by their associated resource name. For a complete list of all resources supported, please refer to the List of Resources wiki pages on our GitHub repository. Export-M365DSCConfiguration-Components @(\"EXOMailboxSettings\", \"TEAMSCallingPolicy\", \"SCDLPComplianceRule\") -Workloads String Array The -Workloads parameter allows you to specify a list of workloads you wish to extract ALL components from. Accepted valus are: EXO - For Exchange Online O365 - For Office 365 administrative components OD - For OneDrive PP - For Power Platform SC - For Security and Compliance SPO - For SharePoint Online TEAMS - For Teams Export-M365DSCConfiguration -Workloads @(\"TEAMS\", \"SPO\") -FileName String Specifies the name of the extracted .ps1 configuration file. If the -Path is not specified along with the -FileName parameter, the file will be created in the current folder where the extraction process was triggered from. If omitted, the default name will be M365TenantConfig.ps1. Export-M365DSCConfiguration -FileName \"MyTenantExtract.ps1\" -Path String Specifies the location where the extracted .ps1 configuration file will be located. If omitted, the file will be created in the current folder where the extraction process was triggered from. Export-M365DSCConfiguration -Path \"C:\\DSCExtracts\\\" -ConfigurationName String Specifies the name of the configuration inside the extracted file. If omitted, the dafault value will be M365TenantConfig. This represents the actual name given to the Configuration object inside the .ps1 file extracted, and by default will always be the name of the compiled configuration folder. Export-M365DSCConfiguration -ConfigurationName \"MyTenantConfig\" -MaxProcesses Number (integer) Certain resources support parallelism to help speed up their extraction processes. Resources such as TEAMSUser, SPOPropertyBag and SPOUserProfileProperty split up the extraction process over multiple parallel threads. By default, Microsoft365DSC will attempt to create up to 16 parallel threads. By specifying this parameter, you can control the maximum number of parallel threads these resources will spin off. Note that,as an example, if you speficy a value of 20 and that there are only 12 instances of a given resources, that only 12 threads will be spun off. Export-M365DSCConfiguration -MaxProcesses 12 NOTE : While Microsoft365DSC fully supports Multi Factor Authentication (MFA) when extracting the configuration, it does not support MFA when pushing a configuration to a target tenant (Automate). To get a full list of all components support by Microsoft365DSC, please refer to our Resources List on our GitHub repository. Once the extraction completes it will prompt you to enter in a file location where the extractions will be stored. If the path entered does not exist, the tool will create it. The following files with the extracted data will be placed in the file location specified: ConfigurationData.psd1 contains information about the tenant, and let's you abstract additional values in your configuration (advanced topic). M365TenantConfig.ps1 file that represents the configuration of the tenant. This file has the information that was extracted.","title":"Extracting Configuration from an Existing Microsoft 365 Tenant"},{"location":"user-guide/extract-config/#extracting-configuration-from-an-existing-microsoft-365-tenant","text":"The moment you install the Microsoft365DSC module onto a machine, a new PowerShell cmdlet, Export-M365DSCConfiguration is made available. The Export-M365DSCConfiguration cmdlet exposes several parameters to help you customize the extraction experience. The following table lists all the parameters available: Parameter Name Type Description Description -LaunchWebUI Switch Launches a new web browser and navigates to the Web based Graphical User Interface. Export-M365DSCConfiguration -LaunchWebUI -Credential PSCredential Specifies the credentials to use to perform the configuration's extraction. If you omit this parameter, the user will be prompted to provide credentials before executing the extraction. $creds = Get-Credential Export-M365DSCConfiguration -Credential $creds -Components String Array The -ComponentsToExtract parameter allows you to specify a granular list of components you wish to extract. The components need to be listed by their associated resource name. For a complete list of all resources supported, please refer to the List of Resources wiki pages on our GitHub repository. Export-M365DSCConfiguration-Components @(\"EXOMailboxSettings\", \"TEAMSCallingPolicy\", \"SCDLPComplianceRule\") -Workloads String Array The -Workloads parameter allows you to specify a list of workloads you wish to extract ALL components from. Accepted valus are: EXO - For Exchange Online O365 - For Office 365 administrative components OD - For OneDrive PP - For Power Platform SC - For Security and Compliance SPO - For SharePoint Online TEAMS - For Teams Export-M365DSCConfiguration -Workloads @(\"TEAMS\", \"SPO\") -FileName String Specifies the name of the extracted .ps1 configuration file. If the -Path is not specified along with the -FileName parameter, the file will be created in the current folder where the extraction process was triggered from. If omitted, the default name will be M365TenantConfig.ps1. Export-M365DSCConfiguration -FileName \"MyTenantExtract.ps1\" -Path String Specifies the location where the extracted .ps1 configuration file will be located. If omitted, the file will be created in the current folder where the extraction process was triggered from. Export-M365DSCConfiguration -Path \"C:\\DSCExtracts\\\" -ConfigurationName String Specifies the name of the configuration inside the extracted file. If omitted, the dafault value will be M365TenantConfig. This represents the actual name given to the Configuration object inside the .ps1 file extracted, and by default will always be the name of the compiled configuration folder. Export-M365DSCConfiguration -ConfigurationName \"MyTenantConfig\" -MaxProcesses Number (integer) Certain resources support parallelism to help speed up their extraction processes. Resources such as TEAMSUser, SPOPropertyBag and SPOUserProfileProperty split up the extraction process over multiple parallel threads. By default, Microsoft365DSC will attempt to create up to 16 parallel threads. By specifying this parameter, you can control the maximum number of parallel threads these resources will spin off. Note that,as an example, if you speficy a value of 20 and that there are only 12 instances of a given resources, that only 12 threads will be spun off. Export-M365DSCConfiguration -MaxProcesses 12 NOTE : While Microsoft365DSC fully supports Multi Factor Authentication (MFA) when extracting the configuration, it does not support MFA when pushing a configuration to a target tenant (Automate). To get a full list of all components support by Microsoft365DSC, please refer to our Resources List on our GitHub repository. Once the extraction completes it will prompt you to enter in a file location where the extractions will be stored. If the path entered does not exist, the tool will create it. The following files with the extracted data will be placed in the file location specified: ConfigurationData.psd1 contains information about the tenant, and let's you abstract additional values in your configuration (advanced topic). M365TenantConfig.ps1 file that represents the configuration of the tenant. This file has the information that was extracted.","title":"Extracting Configuration from an Existing Microsoft 365 Tenant"},{"location":"user-guide/generate-reports/","text":"Generating Reports \u00b6","title":"Generating Reports"},{"location":"user-guide/generate-reports/#generating-reports","text":"","title":"Generating Reports"},{"location":"user-guide/install-first-module/","text":"How to Install \u00b6 Open a PowerShell console (run as Administrator) from any machine. Microsoft365DSC requires that the machine be running at least PowerShell version 4.0+, but we stronly recommend having PowerShell 5.1. In the PowerShell console, run the following command to install the module: Install-Module Microsoft365DSC -Force When this is run, PowerShell is pinging the PowerShell gallery, getting the Microsoft365DSC module and will then download and install it locally on the machine. It will download the required components such as the SharePoint PNP module, Azure Active Directory module, the Exchange Online Management Shell, as well as other dependent modules. Note: It is important that the machine that executes the configuration has internet connectivity back to the Microsoft 365 tenant you are trying to configure or extract the configuration from.","title":"How to install"},{"location":"user-guide/install-first-module/#how-to-install","text":"Open a PowerShell console (run as Administrator) from any machine. Microsoft365DSC requires that the machine be running at least PowerShell version 4.0+, but we stronly recommend having PowerShell 5.1. In the PowerShell console, run the following command to install the module: Install-Module Microsoft365DSC -Force When this is run, PowerShell is pinging the PowerShell gallery, getting the Microsoft365DSC module and will then download and install it locally on the machine. It will download the required components such as the SharePoint PNP module, Azure Active Directory module, the Exchange Online Management Shell, as well as other dependent modules. Note: It is important that the machine that executes the configuration has internet connectivity back to the Microsoft 365 tenant you are trying to configure or extract the configuration from.","title":"How to Install"},{"location":"user-guide/monitor-tenants/","text":"Monitor Tenants for Configuration Drifts \u00b6","title":"Monitor Tenants for Configuration Drifts"},{"location":"user-guide/monitor-tenants/#monitor-tenants-for-configuration-drifts","text":"","title":"Monitor Tenants for Configuration Drifts"},{"location":"user-guide/write-first-config/","text":"Write your First Microsoft365DSC Configuration \u00b6 With Microsoft365DSC, you write your configuration for an Microsoft 365 tenant just like you'd be writing any other DSC configuration. If you don't feel comfortable writing your configuration from scratch, we recommend starting by extracting the configuration from an existing tenant and using this as a baseline to modify/add your own set of configuration. Please refer to the Extracting Configuration from an Existing Microsoft 365 Tenant for more information. A Microsoft365DSC configuration is a PowerShell script (.ps1) file that defines a Configuration object. Most Microsoft365DSC configuration should be run on the current machine (localhost) and will have a structure similar to the following: Configuration NameOfTheConfiguration { Import-DSCResource -ModuleName Microsoft365DSC $GlobalAdminAccount = Get-Credential Node localhost { <Insert Configuration Here> } } NameOfTheConfiguration The last line of the above code simply calls into the Configuration Object as if it was a function. This will initiate a compilation operation on the current configuration. If you decide to name your configuration something other than \"NameOfTheConfiguration\" you will need to update that line accordingly as well. Now that we have the skeleton for our configuration, we need to start populating it with configuration blocks we call DSC Resources Blocks. In the Microsoft365DSC taxonomy, a resource is a component of a workload that can be configured. For example, SPOSite is the resource to configure a SharePoint Online site collection, SCDLPComplianceRule is the resource to configure a Security and Compliance Center Data Loss Prevention (DLP) Rule, etc. Each one of these resources further defines properties that they can manage. In the case of the SPOSite resource for example, properties such as the URL, Title, Storage Quota, etc. acan all be managed by the resource. If we build on this example, I can define a new SharePoint Online site collection using the following DSC Resource Block: SPOSite MyHRSite { Title = \"Human Resources\" Url = \"https:/<My Domain>/sites/HR\" Owner = \"admin@<My Domain>\" Template = \"STS#3\" GlobalAdminAccount = $GlobalAdminAccount Ensure = \"Present\" } The above DSC Resource Block could be inserted inside the Node section of the configuration frame we've convered above. In our example, we are defining a SharePoint Online site collection with title Human Resources and a given URL, owner alias and Template. The DSC Resource Block is given a name of MyHRSite which is meaningless in the bigger scheme of things. DSC simply requires that all instances of a given resource have DSC resource blocks with unique names. Therefore within the same configuration you cannont have two SPOSite DSC Resource Blocks named MyHRSite, but you could have a SPOSite and a SCDLPComplianceRule resource block both named MyHRSite without any issues. You will also notice from the example above that we are defining a GlobalAdminAccount property, passing it the obtained credentials for our tenant's admin account. This property is required for every DSC Resource Block and specifies what account to impersonate when configuring or analyzing the Microsoft 365 tenant. The other property in the resource block is Ensure . Most resources that can be used to create instances of a component have that property available. It can either be set to Present or Absent . If the above example had the property set to Absent, it would mean that a site collection should never exist at the specified URL. If there was such an existing site, Microsoft365DSC would remove it. Omitting to specify this property on resources that support it will default to a value of 'Present'. For a full list of all DSC resources supported by Microsoft365DSC, their associated properties and examples on how to use them, please refer to our List of Resources on the wiki of our GitHub repository.","title":"Write your First Microsoft365DSC Configuration"},{"location":"user-guide/write-first-config/#write-your-first-microsoft365dsc-configuration","text":"With Microsoft365DSC, you write your configuration for an Microsoft 365 tenant just like you'd be writing any other DSC configuration. If you don't feel comfortable writing your configuration from scratch, we recommend starting by extracting the configuration from an existing tenant and using this as a baseline to modify/add your own set of configuration. Please refer to the Extracting Configuration from an Existing Microsoft 365 Tenant for more information. A Microsoft365DSC configuration is a PowerShell script (.ps1) file that defines a Configuration object. Most Microsoft365DSC configuration should be run on the current machine (localhost) and will have a structure similar to the following: Configuration NameOfTheConfiguration { Import-DSCResource -ModuleName Microsoft365DSC $GlobalAdminAccount = Get-Credential Node localhost { <Insert Configuration Here> } } NameOfTheConfiguration The last line of the above code simply calls into the Configuration Object as if it was a function. This will initiate a compilation operation on the current configuration. If you decide to name your configuration something other than \"NameOfTheConfiguration\" you will need to update that line accordingly as well. Now that we have the skeleton for our configuration, we need to start populating it with configuration blocks we call DSC Resources Blocks. In the Microsoft365DSC taxonomy, a resource is a component of a workload that can be configured. For example, SPOSite is the resource to configure a SharePoint Online site collection, SCDLPComplianceRule is the resource to configure a Security and Compliance Center Data Loss Prevention (DLP) Rule, etc. Each one of these resources further defines properties that they can manage. In the case of the SPOSite resource for example, properties such as the URL, Title, Storage Quota, etc. acan all be managed by the resource. If we build on this example, I can define a new SharePoint Online site collection using the following DSC Resource Block: SPOSite MyHRSite { Title = \"Human Resources\" Url = \"https:/<My Domain>/sites/HR\" Owner = \"admin@<My Domain>\" Template = \"STS#3\" GlobalAdminAccount = $GlobalAdminAccount Ensure = \"Present\" } The above DSC Resource Block could be inserted inside the Node section of the configuration frame we've convered above. In our example, we are defining a SharePoint Online site collection with title Human Resources and a given URL, owner alias and Template. The DSC Resource Block is given a name of MyHRSite which is meaningless in the bigger scheme of things. DSC simply requires that all instances of a given resource have DSC resource blocks with unique names. Therefore within the same configuration you cannont have two SPOSite DSC Resource Blocks named MyHRSite, but you could have a SPOSite and a SCDLPComplianceRule resource block both named MyHRSite without any issues. You will also notice from the example above that we are defining a GlobalAdminAccount property, passing it the obtained credentials for our tenant's admin account. This property is required for every DSC Resource Block and specifies what account to impersonate when configuring or analyzing the Microsoft 365 tenant. The other property in the resource block is Ensure . Most resources that can be used to create instances of a component have that property available. It can either be set to Present or Absent . If the above example had the property set to Absent, it would mean that a site collection should never exist at the specified URL. If there was such an existing site, Microsoft365DSC would remove it. Omitting to specify this property on resources that support it will default to a value of 'Present'. For a full list of all DSC resources supported by Microsoft365DSC, their associated properties and examples on how to use them, please refer to our List of Resources on the wiki of our GitHub repository.","title":"Write your First Microsoft365DSC Configuration"}]}